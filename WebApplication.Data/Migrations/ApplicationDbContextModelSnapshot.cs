// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Data.Context;

namespace WebApplication.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication.Data.DataModels.Configurations.ConfigurationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConfigurationTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationTypeId");

                    b.ToTable("ConfigurationItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfigurationTypeId = 1,
                            Cost = 45.67m,
                            Name = "8GB"
                        },
                        new
                        {
                            Id = 2,
                            ConfigurationTypeId = 1,
                            Cost = 87.88m,
                            Name = "16GB"
                        },
                        new
                        {
                            Id = 3,
                            ConfigurationTypeId = 2,
                            Cost = 123.34m,
                            Name = "500GB"
                        },
                        new
                        {
                            Id = 4,
                            ConfigurationTypeId = 2,
                            Cost = 200m,
                            Name = "1TB"
                        },
                        new
                        {
                            Id = 5,
                            ConfigurationTypeId = 3,
                            Cost = 50.76m,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 6,
                            ConfigurationTypeId = 3,
                            Cost = 34.56m,
                            Name = "Blue"
                        });
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Configurations.ConfigurationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Ram"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Hdd"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Color"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Cpu"
                        });
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LaptopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaptopId")
                        .IsUnique();

                    b.ToTable("BasketItem");
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 349.87m,
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 345.67m,
                            Name = "Toshiba"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 456.76m,
                            Name = "HP"
                        });
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.Laptop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "Laptop 1"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            Name = "Laptop 2"
                        });
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.LaptopConfiguration", b =>
                {
                    b.Property<int>("LaptopId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigurationItemId")
                        .HasColumnType("int");

                    b.HasKey("LaptopId", "ConfigurationItemId");

                    b.HasIndex("ConfigurationItemId");

                    b.ToTable("LaptopConfiguration");

                    b.HasData(
                        new
                        {
                            LaptopId = 1,
                            ConfigurationItemId = 1
                        },
                        new
                        {
                            LaptopId = 1,
                            ConfigurationItemId = 3
                        },
                        new
                        {
                            LaptopId = 1,
                            ConfigurationItemId = 5
                        },
                        new
                        {
                            LaptopId = 2,
                            ConfigurationItemId = 1
                        },
                        new
                        {
                            LaptopId = 2,
                            ConfigurationItemId = 3
                        },
                        new
                        {
                            LaptopId = 2,
                            ConfigurationItemId = 5
                        });
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Configurations.ConfigurationItem", b =>
                {
                    b.HasOne("WebApplication.Data.DataModels.Configurations.ConfigurationType", "ConfigurationItemType")
                        .WithMany("ConfigurationItems")
                        .HasForeignKey("ConfigurationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConfigurationItemType");
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.Basket", b =>
                {
                    b.HasOne("WebApplication.Data.DataModels.Laptops.Laptop", "Laptop")
                        .WithOne("Basket")
                        .HasForeignKey("WebApplication.Data.DataModels.Laptops.Basket", "LaptopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.Laptop", b =>
                {
                    b.HasOne("WebApplication.Data.DataModels.Laptops.Brand", "Brand")
                        .WithMany("Laptops")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.LaptopConfiguration", b =>
                {
                    b.HasOne("WebApplication.Data.DataModels.Configurations.ConfigurationItem", "ConfigurationItem")
                        .WithMany("LaptopConfigurations")
                        .HasForeignKey("ConfigurationItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication.Data.DataModels.Laptops.Laptop", "Laptop")
                        .WithMany("LaptopConfiguration")
                        .HasForeignKey("LaptopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConfigurationItem");

                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Configurations.ConfigurationItem", b =>
                {
                    b.Navigation("LaptopConfigurations");
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Configurations.ConfigurationType", b =>
                {
                    b.Navigation("ConfigurationItems");
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.Brand", b =>
                {
                    b.Navigation("Laptops");
                });

            modelBuilder.Entity("WebApplication.Data.DataModels.Laptops.Laptop", b =>
                {
                    b.Navigation("Basket");

                    b.Navigation("LaptopConfiguration");
                });
#pragma warning restore 612, 618
        }
    }
}
